<Page
    x:Class="BLE_Hackme.Scenario_05_ManufacturerAdvertisements"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BLE_Hackme"
    xmlns:uc="using:BLE_Hackme.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <ScrollViewer Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="BLE Manufacturer Specific Advertisements" Style="{StaticResource SampleHeaderTextStyle}"/>
                <FontIcon x:Name="Solved" Style="{StaticResource ScenarioCompletedIconStyle}" Glyph="&#xE930;" />
            </StackPanel>
            
            <uc:ScenarioSubHeaderIntro />

            <RichTextBlock TextWrapping="Wrap" Margin="0,0,0,0" Style="{StaticResource rtbFontStyle}">
                <Paragraph>
                    In the previous task you learned how Manufacturer Specific (0xFF) field can be used to broadcast iBeacon.
                It can however transmit any other data - vendors use it for example to identify device type and model, check current status, broadcast temporary id, sensor indication, or just some text.
                </Paragraph>
            </RichTextBlock>

            <uc:ScenarioSubHeaderTask />

            <RichTextBlock TextWrapping="Wrap" Margin="0,0,0,0" Style="{StaticResource rtbFontStyle}">
                <Paragraph>
                    The HackMe should now broadcast other Manufacturer Specific data in place of the iBeacon. 
                    Find out the packet raw payload, and decode its value (skipping Company ID bytes) from ascii hex string into human readable text.
                In the advertisement details you can tap on the blue "Manufacturer data" and select a different data display format.

                </Paragraph>
                <Paragraph>
                    Note: similarly to previous task, the HackMe advertisement is broadcasted again along with your computer's Microsoft broadcast packets
                    (nRF Connect shows Windows logo icon), which may have higher priority.
                    If you are having trouble catching the right packet, check the previous task description and hints.
                </Paragraph>
                <Paragraph Margin="0,5,0,0">
                    By the way, try also scanning various nearby BLE devices: phones, smart TVs, IoT gadgets etc - and check what they advertise.
                </Paragraph>
                
            </RichTextBlock>
            

            <uc:ScenarioSubHeaderSubmit />

            <StackPanel Orientation="Vertical">
                <TextBlock Text="Enter the text transmitted in Manufacturer Specific (0xFF) field:" Margin="10,5,5,5"/>
                <StackPanel Orientation="Horizontal">
                    <TextBox x:Name="ManufacturerSpecific" PlaceholderText="Some text?" Width="250" Margin="10,5,5,5" />
                    <Button x:Name="Submit" Content="Submit" Click="{x:Bind ValueSubmitButton_Click}" Margin="10,5,5,5"/>
                </StackPanel>
            </StackPanel>

            <uc:ScenarioSubHeaderHints />

            <StackPanel Orientation="Vertical" x:Name="Hint1" Visibility="Collapsed" Margin="0,5,0,5" >
                <TextBlock TextWrapping="Wrap">           
                  If the custom advertisement data is displayed too shortly in nRF Connect (along with Microsoft advertisements), 
                    you may try to press "stop scanning" in the right moment, and the data will stay static.
                </TextBlock>
            </StackPanel>

            <StackPanel Orientation="Vertical" x:Name="Hint2" Visibility="Collapsed" Margin="0,5,0,5">
                <RichTextBlock TextWrapping="Wrap">
                    <Paragraph>
                        Try tapping on the blue "Manufacturer data" in the advertisement details, and then select 
                        "Text" data display format:
                    </Paragraph>
                    <Paragraph>
                        <InlineUIContainer>
                            <Image Source="../Assets/nrf_connect_advertisement_data_format_display.png" Width="300" HorizontalAlignment="Center" Margin="20,5,5,5"/>
                        </InlineUIContainer>
                    </Paragraph>

                </RichTextBlock>
            </StackPanel>

        </StackPanel>
    </ScrollViewer>

</Page>
